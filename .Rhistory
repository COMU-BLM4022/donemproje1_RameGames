data <- read.csv("lastgame.csv")
#satır sayısını öğrenme
num_rows <- nrow(data)
print(num_rows)
#sutun sayısını öğrenme
num_cols <- ncol(data)
print(num_cols)
#ilk 50
#head(data)
#NA değer kontrolü
na_sayisi <- sum(is.na(data))
print(paste("Toplam Na deger sayisi:", na_sayisi))
#sütün bazlı
sutun_na_sayisi <- colSums(is.na(data))
print(sutun_na_sayisi)
#Na değerlerini silme
data_clean <- na.omit(data)
#Yeni veri çerçevesini görüntüle
#print(data_clean)
#sutun bazında tekrar konrol
sutun_na <- colSums(is.na(data_clean))
print(sutun_na)
#Satır sayısını öğrenme
num_rowsof <- nrow(data_clean)
print(num_rowsof)
#Sütun sayısını öğrenme
num_colsof <- ncol(data_clean)
print(num_colsof)
#Sütunun benzersiz değerlerini ve sayısını bul
unique_value <- unique(data_clean$platform)
unique_value_sum <- length(unique_value)
#Benzersiz değerleri ve sayılarını görüntüle
print(unique_value)
print(unique_value_sum)
library(ggplot2)
library(dplyr)
#Sütunun frekans tablosunu oluştur
frekans_tablosu <- table(data_clean$platform)
frekans_tablosu <- data_clean %>%
count(platform) %>%
mutate(yuzde = n / sum(n) * 100) %>%
arrange(desc(yuzde)) %>%
slice(1:10)
##renkler <- rainbow(length(unique(data_clean$platform)))
#Pasta grafiğini oluşturun
pasta_grafik <- ggplot(frekans_tablosu, aes(x = "", y = yuzde, fill = platform)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
scale_fill_brewer(palette = "Set1") +
theme_void() +
theme(legend.position = "right") +
labs(title = "En Yuksek Yuzdelik Degerlere Sahip 10 Platform") +
geom_text(aes(label = paste0(round(yuzde, 1), "%")), position = position_stack(vjust = 0.5)) +
theme(
plot.margin = unit(c(1, 1, 1, 1), "cm") # Kenar boşluklarını ayarla
)
#Grafiği görüntüle
print(pasta_grafik)
library(dplyr)
library(ggplot2)
top_ten_games <- data_clean %>%
arrange(rank) %>%
slice(1:10) %>%
select(name, global_sales)
#Histogram grafiğini oluşturun
hist_graph<-ggplot(top_ten_games, aes(x = reorder(name, global_sales), y = global_sales, fill = name)) +
geom_bar(stat = "identity") +
labs(title = "En cok Satan 10 Oyun",
x = "Oyun İsimleri",
y = "Global Satıslar (Milyonlarca)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set3") +
guides(fill = "none") # Legendi kaldırır
print(hist_graph)
library(knitr)
knitr::opts_chunk$set(echo = FALSE)
mean_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], mean)
median_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], median)
mode_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], function(x) {
tbl <- table(x)
as.numeric(names(tbl)[which.max(tbl)])
})
#Sonuçları bir veri çerçevesine dönüştürme
result_table <- data.frame(mean = mean_values, median = median_values, mode = mode_values)
#Tabloyu HTML olarak yazdırma
knitr::kable(result_table, caption = "SATIŞ  DEĞERLERİNİN ORTALAMASI, MEDYANI VE MODU")
library(knitr)
#İlk 30 veriyi almak
data_head <- head(data_clean, 30)
#Tabloyu HTML olarak yazdırma
knitr::kable(data_head, caption = "VERİ SETİNDEKİ İLK 30 VERİ")
library(knitr)
knitr::opts_chunk$set(echo = FALSE)
mean_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], mean)
median_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], median)
mode_values <- sapply(data_clean[, c("na_sales", "eu_sales", "jp_sales", "other_sales", "global_sales")], function(x) {
tbl <- table(x)
as.numeric(names(tbl)[which.max(tbl)])
})
#Sonuçları bir veri çerçevesine dönüştürme
result_table <- data.frame(mean = mean_values, median = median_values, mode = mode_values)
#Tabloyu HTML olarak yazdırma
knitr::kable(result_table, caption = "SATIŞ  DEĞERLERİNİN ORTALAMASI, MEDYANI VE MODU")
